require("RSNNS")
true  = 1
false = 0
xor   = 1
and   = 2
or    = 3
inputs = data.frame(p = c(true, true, false, false,
true, true, false, false,
true, true, false, false),
q = c(true, false, true, false,
true, false, true, false,
true, false, true, false),
lo = c(and, and, and, and,
or, or, or, or,
xor, xor, xor, xor))
inputs <- inputs
outputs <- data.frame(target =
c(true, false, false, false,
true, true, true, false,
false, true, true, false))
outputs <- outputs
net <- mlp(x = inputs, y = outputs, size = 6, learnFunc = "Std_Backpropagation",
hiddenActFunc = "Act_Logistic", inputsTest = inputs, targetsTest = outputs, linOut = FALSE, maxit = 20000)
extractNetInfo(net)$unitDefinitions$unitBias
weightMatrix(net)
extractNetInfo(net)
?extractNetInfo
weightMatrix(net)
w <- weightMatrix(net)
w[w != 0]
paste(w[w != 0], collapse = ", ")
?mlp
extractNetInfo(net)
extractNetInfo(net)$unitDefinitions
extractNetInfo(net)$unitDefinitions$unitAct
extractNetInfo(net)$unitDefinitions$unitBias
paste(extractNetInfo(net)$unitDefinitions$unitBias, collapse = ",")
paste(w[w != 0], collapse = ", ")
paste(extractNetInfo(net)$unitDefinitions$unitBias, collapse = paste( "*", extractNetInfo(net)$unitDefinitions$unitBias ))
paste(extractNetInfo(net)$unitDefinitions$unitBias, collapse = paste( " *", extractNetInfo(net)$unitDefinitions$unitBias ))
paste(extractNetInfo(net)$unitDefinitions$unitBias, paste( " *", extractNetInfo(net)$unitDefinitions$unitBias ))
paste(extractNetInfo(net)$unitDefinitions$unitBias, paste( " *", extractNetInfo(net)$unitDefinitions$unitBias ), collapse = ",")
paste(extractNetInfo(net)$unitDefinitions$unitBias, paste( " *", extractNetInfo(net)$unitDefinitions$unitAct ), collapse = ",")
extractNetInfo(net)$unitDefinitions$unitAct
extractNetInfo(net)$unitDefinitions$unitBias
length(extractNetInfo(net)$unitDefinitions$unitBias)
length(extractNetInfo(net)$unitDefinitions$unitAct)
extractNetInfo(net)$unitDefinitions$unitBias * extractNetInfo(net)$unitDefinitions$unitAct
paste(extractNetInfo(net)$unitDefinitions$unitBias * extractNetInfo(net)$unitDefinitions$unitAct, collapse = ",")
predict(net, c(1, 1, 1))
predict(net, c(1, 0, 1))
2.504485803892305E-4
require("RSNNS")
true  = 1
false = 0
xor   = 1
and   = 2
or    = 3
inputs = data.frame(p = c(true, true, false, false,
true, true, false, false,
true, true, false, false),
q = c(true, false, true, false,
true, false, true, false,
true, false, true, false),
lo = c(and, and, and, and,
or, or, or, or,
xor, xor, xor, xor))
inputs <- inputs
outputs <- data.frame(target =
c(true, false, false, false,
true, true, true, false,
false, true, true, false))
outputs <- outputs
net <- mlp(x = inputs, y = outputs, size = 6, learnFunc = "Std_Backpropagation",
hiddenActFunc = "Act_Logistic", inputsTest = inputs, targetsTest = outputs, linOut = TRUE, maxit = 20000)
extractNetInfo(net)
w <- weightMatrix(net)
paste(w[w != 0], collapse = ", ")
paste(extractNetInfo(net)$unitDefinitions$unitBias * extractNetInfo(net)$unitDefinitions$unitAct, collapse = ",")
?mlp
predict(net, c(1, 0, 1))
predict(net, c(1, 1, 1))
paste(extractNetInfo(net)$unitDefinitions$unitBias, collapse = ",")
require("RSNNS")
true  = 1
false = 0
xor   = 1
and   = 2
or    = 3
inputs = data.frame(p = c(true, true, false, false,
true, true, false, false,
true, true, false, false),
q = c(true, false, true, false,
true, false, true, false,
true, false, true, false),
lo = c(and, and, and, and,
or, or, or, or,
xor, xor, xor, xor))
inputs <- inputs
outputs <- data.frame(target =
c(true, false, false, false,
true, true, true, false,
false, true, true, false))
outputs <- outputs
net <- mlp(x = inputs, y = outputs, size = 6, learnFunc = "Std_Backpropagation",
hiddenActFunc = "Act_Logistic", inputsTest = inputs, targetsTest = outputs, linOut = FALSE, maxit = 20000)
extractNetInfo(net)
w <- weightMatrix(net)
paste(w[w != 0], collapse = ", ")
paste(extractNetInfo(net)$unitDefinitions$unitBias, collapse = ",")
?mlp
paste(w[w != 0], collapse = ", ")
